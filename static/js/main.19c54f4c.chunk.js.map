{"version":3,"sources":["store.tsx","Marker.tsx","Map.tsx","Image.tsx","ImageGrid.tsx","actions.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["store","createStore","center","zoomLevel","MapMarker","this","props","position","react_default","a","createElement","Marker","icon","Leaflet","divIcon","html","counter","iconSize","Tooltip","toString","PureComponent","BaseLayer","LayersControl","Map","event","console","log","hereUrlBase","hereUrlEnd","hereOpts","attribution","subdomains","app_id","app_code","language","base","type","minZoom","maxZoom","body","document","querySelector","hData","dataset","hereId","hereCode","className","ref","es_Map","zoom","checked","name","TileLayer","url","Object","assign","src_Marker_0","Component","Image","style","backgroundColor","color","src","alt","ImageGrid","images","map","item","src_Image_0","key","actions","increment","state","decrement","App","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","Math","floor","random","total","list","i","push","randomColorHex","fillEmptyImages","src_ImageGrid_0","src_Map_0","connect","_ref","Boolean","window","location","hostname","match","ReactDOM","render","redux_zero_react","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.19c54f4c.chunk.js","sourcesContent":["/**\n * Electron based desktop application for setting geotags for images\n *\n * Licensed under the MIT license\n * Copyright (c) Juga Paazmaya <paazmaya@yahoo.com> (https://paazmaya.fi)\n */\n\nimport createStore from \"redux-zero\";\nimport ZeroStore from 'redux-zero/interfaces/Store';\n\nexport interface Store<T extends object> extends ZeroStore<T> {\n\n}\n\nexport interface State {\n  center: [number, number],\n  zoomLevel: number\n}\n\nconst initialState:State = {\n  center: [60.2, 24.91],\n  zoomLevel: 8\n};\n\nconst store:Store<State> = createStore(initialState);\n\nexport default store;","/**\n * Electron based desktop application for setting geotags for images\n *\n * Licensed under the MIT license\n * Copyright (c) Juga Paazmaya <paazmaya@yahoo.com> (https://paazmaya.fi)\n */\n\nimport React, {\n  PureComponent\n} from 'react';\nimport {\n  Marker, Tooltip\n} from 'react-leaflet';\nimport Leaflet from 'leaflet';\n\nimport './Marker.css';\n\ninterface MarkerProps {\n  position: [number, number],\n  counter?: number\n}\n\nclass MapMarker extends PureComponent<MarkerProps> {\n\n  render () {\n    if (!this.props.position) {\n      return null;\n    }\n\n    return (\n      <Marker position={this.props.position} icon={Leaflet.divIcon({\n        html: '' + (this.props.counter || 0),\n        iconSize: [60, 60]\n      })}>\n        <Tooltip>\n          <h1>{ this.props.position.toString() }</h1>\n        </Tooltip>\n      </Marker>\n    );\n  }\n}\n\nexport default MapMarker;\n","/**\n * Electron based desktop application for setting geotags for images\n *\n * Licensed under the MIT license\n * Copyright (c) Juga Paazmaya <paazmaya@yahoo.com> (https://paazmaya.fi)\n */\n\nimport React, {Component, SyntheticEvent} from 'react';\n\nimport {\n  Map as LMap, TileLayer, LayersControl\n} from 'react-leaflet';\n\nimport Marker from './Marker';\nimport 'leaflet/dist/leaflet.css';\nimport './Map.css';\n\n// https://github.com/PaulLeCam/react-leaflet/blob/master/example/components/layers-control.js\nconst { BaseLayer } = LayersControl;\n\ninterface MapProps {\n  center: [number, number]\n  zoomLevel: number\n}\n\nclass Map extends Component<MapProps> {\n\n  onDragOver (event:SyntheticEvent) {\n    console.log(event);\n  }\n\n  render () {\n    // https://developer.here.com/documentation/map-tile/topics/request-constructing.html#request-constructing__table-basic-request-elements\n    const hereUrlBase:String = 'https://{s}.{base}.maps.api.here.com/maptile/2.1/{type}/newest/';\n    const hereUrlEnd:String = '/{z}/{x}/{y}/256/png8?app_id={app_id}&app_code={app_code}&lg={language}';\n\n    const hereOpts = {\n      attribution: 'Map &copy; 1987-2015 <a href=\"http://developer.here.com\">HERE</a>',\n      subdomains: '1234',\n      app_id: '',\n      app_code: '',\n      language: 'eng',\n      base: 'aerial',\n      type: 'maptile',\n      minZoom: 0,\n      maxZoom: 20\n    };\n    const body = document.querySelector('body');\n    if (body) {\n      const hData:DOMStringMap = body.dataset;\n      hereOpts.app_id = hData.hereId as string;\n      hereOpts.app_code = hData.hereCode as string;\n    }\n\n    return (\n      <div className=\"map-section\" ref=\"mapthing\">\n        <LMap center={ this.props.center }\n          ref=\"leafMap\"\n          zoom={ this.props.zoomLevel }\n          className=\"imagemap\">\n          <LayersControl position=\"topright\">\n            <BaseLayer checked name=\"OpenStreetMap\">\n              <TileLayer\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'/>\n            </BaseLayer>\n            <BaseLayer name=\"HERE grey\">\n              <TileLayer {...hereOpts}\n                base=\"base\"\n                url={ hereUrlBase + 'normal.day.grey' + hereUrlEnd }/>\n            </BaseLayer>\n            <BaseLayer name=\"HERE hybrid\">\n              <TileLayer {...hereOpts}\n                url={ hereUrlBase + 'hybrid.day' + hereUrlEnd }/>\n            </BaseLayer>\n            <BaseLayer name=\"HERE terrain\">\n              <TileLayer {...hereOpts}\n                url={ hereUrlBase + 'terrain.day' + hereUrlEnd }/>\n            </BaseLayer>\n          </LayersControl>\n          <Marker ref=\"previewMarker\" position={ this.props.center } />\n        </LMap>\n      </div>\n    );\n  }\n}\n\nexport default Map;\n","/**\n * Electron based desktop application for setting geotags for images\n *\n * Licensed under the MIT license\n * Copyright (c) Juga Paazmaya <paazmaya@yahoo.com> (https://paazmaya.fi)\n */\n\nimport React, {\n  PureComponent\n} from 'react';\nimport './Image.css';\n\nexport interface ImageProps {\n  url: string,\n  key: string,\n  color?: string\n}\n\nclass Image extends PureComponent<ImageProps> {\n  render () {\n    return (\n      <figure className=\"image-grid-item\" style={{backgroundColor: this.props.color}}>\n        <img className=\"image-grid-image\"\n          src={ this.props.url }\n          alt={ this.props.url }\n        />\n      </figure>\n    );\n  }\n}\n\n\nexport default Image;\n","/**\n * Electron based desktop application for setting geotags for images\n *\n * Licensed under the MIT license\n * Copyright (c) Juga Paazmaya <paazmaya@yahoo.com> (https://paazmaya.fi)\n */\n\nimport React, {PureComponent} from 'react';\nimport Image, {ImageProps} from './Image';\nimport './ImageGrid.css';\n\nexport interface ImageGridProps {\n  images: ImageProps[]\n}\n\nclass ImageGrid extends PureComponent<ImageGridProps> {\n\n  render () {\n    return (\n      <div className=\"image-grid\">{\n        this.props.images.map(item => (\n          <Image url={item.url} color={item.color} key={item.key} />\n        ))\n      }</div>\n    );\n  }\n}\n\nexport default ImageGrid;\n","/**\n * Electron based desktop application for setting geotags for images\n *\n * Licensed under the MIT license\n * Copyright (c) Juga Paazmaya <paazmaya@yahoo.com> (https://paazmaya.fi)\n */\n//import {State, Store} from './store';\n\nconst actions = store => ({\n  increment: state => ({ zoomLevel: state.zoomLevel + 1 }),\n  decrement: state => ({ zoomLevel: state.zoomLevel - 1 })\n});\n\nexport default actions;","/**\n * Electron based desktop application for setting geotags for images\n *\n * Licensed under the MIT license\n * Copyright (c) Juga Paazmaya <paazmaya@yahoo.com> (https://paazmaya.fi)\n */\n\nimport React, {Component} from 'react';\nimport { connect } from 'redux-zero/react';\nimport Map from './Map';\nimport ImageGrid from './ImageGrid';\nimport './App.css';\nimport actions from './actions';\n\ninterface AppProps {\n  center: [number, number],\n  zoomLevel: number\n}\n\nconst mapToProps = ({\n  center,\n  zoomLevel\n}) => ({\n  center,\n  zoomLevel\n});\n\n// { center,  zoomLevel, increment, decrement }\nexport class App extends Component<AppProps> {\n\n  randomColorHex():string {\n    return '#' + Math.floor(Math.random() * 16777215).toString(16);\n  }\n\n  fillEmptyImages(total:number) {\n    const list = [];\n    for (let i = 0; i < total; ++i) {\n      list.push({\n        url: '',\n        key: '' + i,\n        color: this.randomColorHex()\n      });\n    }\n    return list;\n  }\n\n  render () {\n    const images = this.fillEmptyImages(100);\n\n    return (\n      <div className=\"App full-screen\">\n        <section className=\"App-section section-grid\">\n          <ImageGrid images={images} />\n        </section>\n        <section className=\"App-section section-map\">\n          <Map center={this.props.center} zoomLevel={this.props.zoomLevel} />\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapToProps, actions)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/**\n * Electron based desktop application for setting geotags for images\n *\n * Licensed under the MIT license\n * Copyright (c) Juga Paazmaya <paazmaya@yahoo.com> (https://paazmaya.fi)\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'redux-zero/react';\nimport './index.css';\nimport store from './store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst AppStore = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(<AppStore />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}